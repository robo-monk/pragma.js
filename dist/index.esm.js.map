{"version":3,"file":"index.esm.js","sources":["../src/composers/helpers.js","../src/pragmas/pragma.js","../src/composers/templates.js","../src/pragmas/comp.js","../src/icons/icons.js"],"sourcesContent":["export function forArg(args, cb){\n  for (let i=0; i<args.length; i+=1){\n    cb(args[i])\n  }\n}\n\nexport const throwSoft = (desc, potential=null, fixes=['rerun the code 10 times'], trigger=null) => {\n  console.error(`%c ðŸ§¯ pragma.js  %c \\n\n      encountered a soft error ðŸ”« %c \\n\n      \\n${trigger ? `Triggered by: [${trigger.key} ${trigger}]` :``}\n      \\n${desc} %c\\n\n      \\n${ potential!=null ? `Potential ${potential}: \\n\\t${fixes.join(\"\\n\\t\")}` : '' }\n      `, \"font-size:15px\", \"font-size: 12px;\", \"color:whitesmoke\", \"color:white\")\n  // throw \"pragmajs: \" + desc\n}\n\nexport const parse = {\n  cssToDict:((str) => {\n    // console.log(`parsing pcss`)\n    //console.log(str)\n\n    str = str.replaceAll(\"\\n\", \";\").replaceAll(\":\", \" \")\n    let cssDict = new Map()\n    for(let style of str.split(\";\")){\n      if (style.replace(/\\s/g, \"\").length<2) continue\n      style = style.trim().split(\" \") \n      let key = style[0]\n      style.shift()\n      cssDict.set(key.trim(), style.join(\" \").trim())\n    }\n\n    // check css properties\n    let unsupported = []\n    for (const [key, value] of cssDict.entries()){\n      if (!CSS.supports(key, value)) unsupported.push(`${key.trim()}: ${value.trim()}`)\n    }\n    \n    if (unsupported.length > 0){\n      throwSoft(`CSS syntax error`, 'typos', unsupported)\n    }\n    return cssDict\n  }),\n  css: ((pcss) => {\n    let css = \"\"\n    for (let [key, value] of parse.cssToDict(pcss)) {\n      //console.log(key, value)\n      css+=`${key}:${value};`\n    }\n    return css\n  })\n}\n","// a pragma is defined as a concept, which has an actual physical object \"connected\"\n// with it\nimport $, { expr } from \"jquery\"\nimport { parse, throwSoft } from \"../composers/helpers\"\n\nclass Pragma {\n  constructor(element=null, listeners={}, key){\n    this.element = $(element)\n    this.generate_key(key)\n    // this.children = []\n    this.childMap = new Map()\n    this.setup_listeners(listeners)\n    IntersectionObserver.default = {\n      fill: \"shit\"\n    }\n  }\n  throw(e, f, ff=[]){\n    throwSoft(e, f, ff, this)\n  }\n  get children() {\n    return Array.from(this.childMap.values())\n  }\n  generate_key(key){\n    if (key != null) {\n      this.key = key\n    }else{\n      this.key = btoa(Math.random()).substr(10, 5) \n    }\n  }\n\n  find(key){\n    // recursively find a key\n    // return false\n    if (this.childMap.has(key)) return this.childMap.get(key)\n    for (let [k, value] of this.childMap) {\n      let vv = value.find(key) \n      if (vv) return vv\n    }\n  }\n  add(spragma){\n    if (this.childMap.has(spragma.key)) { \n      spragma.key = spragma.key + \"~\"\n      return this.add(spragma)\n    }\n    spragma.parent = this\n    this.childMap.set(spragma.key, spragma)\n    // this.children.push(spragma)\n  }\n  get kidsum() { return this.childMap.size }\n  get hasKids() { return this.kidsum > 0 }\n\n  listen(listeners){\n    this.setup_listeners(listeners)\n    return this\n  }\n  setup_listeners(listeners){\n    Object.entries(listeners).forEach(([on, cb]) => {\n      this.element.on(on, () => cb())\n    })\n  }\n  click(){}\n\n  text(){\n    return this.element.text()\n  }\n  offset(){\n    return this.element.offset()\n  }\n  left(){\n    return this.offset().left\n  }\n  top(){\n    return this.offset().top\n  }\n  height(){\n    return this.element.height()\n  }\n  width(){\n    return this.element.width()\n  }\n  x(relative_width){\n    return this.left() + this.width()/2 - relative_width/2\n  }\n  css(str){\n    if (this.element) this.element.css(Object.fromEntries(parse.cssToDict(str)))\n    return this\n  }\n\n  get _isPragma() { return true }\n}\n\n\n\nexport { Pragma as default }\n","import Pragma from \"../pragmas/pragma\"\nimport Comp from \"../pragmas/comp\"\n\nimport { forArg } from \"./helpers\"\n\n// TODO button action refactor\nconst buttonAction = (key, value, icon, action) => {\n  return {\n    key: key,\n    type: \"button\",\n    icon: icon,\n    value: value,\n    click: (master, comp) => {\n      action(master, comp)\n    }\n  }\n}\nconst buttonValue = (key, ext, value, step, icon) => {\n  return buttonAction(key+ext, value, icon, ((master, comp) => {\n    comp.parent.value += step\n  }))\n}\n\nconst Monitor = {\n  custom: ((key, val=0, tag, action) => {\n    return new Comp({\n      key: key,\n      value: val,\n      set: ((value, master, comp) => { \n        if(action) return action(value, comp, master)\n      })\n    }).as(`<${tag}>${val}</${tag}>`, key+\"-monitor\")\n  }),\n  simple: ((key, val=0, tag=\"p\", action=null) => {\n    let actionCb = (value, comp, master) => {\n      comp.element.text(value)\n      if (action) return action(value, comp, master)\n    }\n    let mon =  Monitor.custom(key, val, tag, actionCb) \n    return mon\n  }),\n}\n\nconst Button = {\n  action: ((key, icon, action, tippy) => {\n    let btn = new Comp({\n      key: key,\n      icon: icon,\n      type: \"button\",\n      click: action // value comp trigger\n    })\n    if (tippy) btn.setTippy(tippy)\n    return btn\n  }),\n  controls: ((key, value, step, action, icons) => {\n\n    let plus = Button.action(key+\"+\", icons[\"+\"] || \"+\", (master, comp) => {\n      comp.parent.value += step\n    })\n\n    let minus = Button.action(key+\"-\", icons[\"-\"] || \"-\", (master, comp) => {\n      comp.parent.value += -step\n    })\n\n    return Monitor.simple(key, value, \"div\").prepend(plus).append(minus)\n  })\n}\n\n\n\nconst variantUIActivate = (element) => {\n  // console.log(`activating ${element.key} to ${element.value}`)\n  for (let variant of element.children){\n    variant.element.removeClass(\"pragma-active\")\n  }\n  element.children[element.value].element.addClass(\"pragma-active\")\n}\n\nconst variantUIAction = (comp, index, attr) => {\n  let element = comp.find(attr.key)\n  element.value = index\n}\n\nconst Variants = (key, value, icon, set, click, variants) => {\n  return new Comp(map_variants({key:key,value:value,icon:icon,set:set,click:click,variants:variants}))\n}\n\nconst map_variants = (attr) =>{\n  // key, value, icon, set_cb, clickcb, variants\n  return {\n    key: attr.key,\n    value: attr.value,\n    type: \"choice\",\n    element_template: (key, index) => {\n      return buttonAction(attr.key, index, attr.icon(key, index), (comp) => {\n        variantUIAction(comp, index, attr)\n      })\n    },\n    set: (value, comp) => {\n      if (comp && comp.find(attr.key)) variantUIActivate(comp.find(attr.key)) \n      attr.set(value, comp, attr.key)\n    },\n    variants: attr.variants\n  }\n}\n\nconst text = (text, key=null, elements=[]) => {\n  if (key==null) key = text\n  return {\n    key: key,\n    type: \"text\",\n    icon: text,\n    elements: elements\n  }\n}\n\nconst composer = (key, icon, elements) => {\n  return {\n    key: key,\n    type: \"composer\",\n    icon: icon,\n    elements: elements\n  }\n}\n\nconst Slider = {\n  simple: (key, min=0, max=420, val) => {\n    val = val || (min+max)/2\n    let slider = Compose(key).as(`<input type='range' min=${min} max=${max} value=${val}></input>`).setRange(min, max)\n    slider.element.on('input', () => {\n      slider.value = parseInt(slider.element[0].value)\n    })\n\n    return slider\n  },\n\n  value: (key, min, max, val=0, onupdate) => {\n    let monitor = Monitor.simple(key+\"_monitor\", val, \"div\") \n    let slider = Slider.simple(key+\"_slider\", min, max, val)\n    let el = Compose(key).contain(slider, monitor).setRange(min, max)\n\n    slider.addToChain((v) => {\n      v = parseInt(v)\n      el.value = v\n    })\n\n    el.addToChain((v) => {\n      slider.element[0].value = v.toString()\n    })\n\n    return el.chain(monitor)\n  }\n}\nconst Select = {\n  attr: ((key, attrs, onset, icon, value=0) => {\n    return new Comp(map_variants({\n      key: key,\n      value: value,\n      icon: (key, index) => {\n        let attr = icon(key, index)\n        return `<div class=\"${attr.type}\" style='width:25px;height:25px;border-radius:25px;${attr.css}'>${attr.html}</div>`\n      },\n      set: (v, comp, key) => {\n        if (onset) onset(attrs[v], comp, key)\n      },\n      variants: attrs\n    })).setRange(0, attrs.length-1).setLoop()\n  }),\n  color: ((key, colors, onset, value=0) => {\n    return Select.attr(key, colors, onset, (key, index) => { return { css: `background:${key}`, html: \"\" } }, value) \n  }),\n  font: ((key, fonts, onset, value=0) => {\n    return Select.attr(key, fonts, onset, (key, index) => { return { css: `font-family:${key}`, html: \"Aa\" } }, value) \n  })\n}\n\n// base\nconst map = (key, type, icon, elements=null, value=null) => {\n  return {key:key,type:type,value:value,icon:icon,elements:elements}\n}\nconst maps = (string, elements=null) => {\n  // map string\n  // \"key type icon\"\n  let v = string.split(\" \")\n  return map(v[0], v[1], v[2], elements)\n}\n\nconst Compose = (key, icon, elements, type=\"composer\") => {\n  if (key instanceof Object) return new Comp(key) \n  return new Comp(map(key, type, icon, elements))\n}\n\nconst Value = (key, value, icon, elements, type=\"value\") => {\n  return new Comp(map(key, type, icon, elements))\n}\n\n// TODO put these somewhere else\nfunction _pragma(p){\n  return p && typeof p === \"object\" && p._isPragma\n}\n\nclass Pragmatizer{\n  constructor(where){\n    this.where = where\n  }\n  pragmatize(){\n    forArg(arguments, (p) => {\n      p.pragmatize(this.where)\n    })\n  }\n}\n\nconst at = (where) => {\n  if (_pragma(where)) return new Pragmatizer(where.element)\n  return new Pragmatizer($(where))\n}\n\nconst pragmatize = (comp, where) => {\n  comp.pragmatize(where)\n  return comp\n}\n\nconst contain = (a, b) => {\n  a.contain(b)\n  return a\n}\n\nconst host = (a, b) => {\n return a.host(b)\n}\n\n\nconst Bridge = (stream, keys=[], beam=((object, trigger) => console.table(object))) => {\n  //console.log(stream, keys, beam)\n  function makeData(master){\n    let sync = {}\n    for (let key of keys){\n      let c = master.find(key)\n      if (c){\n        sync[key] = c.value\n      }else{\n        console.warn(`pragmajs > could not find ${key} in ${master.key}\n        when bridgin through ${bridgeComp.key}`)\n      }\n    }\n    return sync\n  }\n\n\n\n  let bridgeComp = Compose(stream.key+\"Bridge\")\n\n  function transmit(trigger){\n    beam(bridgeComp.value, trigger)\n  }\n\n  bridgeComp.do(((v, master, trigger) => {\n    //console.log(v, master, trigger)\n    if (keys.includes(trigger.key)) {\n      bridgeComp.actualValue = makeData(master)\n      transmit(trigger)\n    }\n\n  }))\n\n  stream.chain(bridgeComp)\n\n  //stream.addToChain(((v, master, trigger) => {\n    ////bridgeComp.value = syncableObj\n    ////if (keys.includes(trigger.key)) transmit(syncableObj(master), trigger) \n  //}))\n  bridgeComp.set = (obj) => {\n    for (let [key, value] of Object.entries(obj)){\n      //console.log(key)\n      stream.find(key).value=value\n    }\n  }\n  \n\n  return bridgeComp\n}\n\nexport { buttonValue, Button, Select, Slider, Variants, Compose, Value, pragmatize, at, contain, host, Bridge, Monitor}\n\n","import $ from \"jquery\"\nimport Pragma from \"./pragma\"\nimport { Compose } from \"../composers/templates\"\nimport tippy from \"tippy.js\"\nimport Mousetrap from \"mousetrap\"\nimport { forArg } from \"../composers/helpers\"\n\nexport default class Comp extends Pragma {\n  constructor(map, parent = null){\n    super()\n    this.actualValue = null\n\n    if (map instanceof Object){\n      this.build(map)\n      this.parent = parent\n    }else{\n      this.key = map\n    }\n\n    this.log_txt = \"\"\n\n    // this.unchain()\n    // TODO add init chain or smth like thatjj\n    this.addToChain((\n    (v, master, trigger=this) => { \n      if (this.master) {\n        master.doChain(v, master, trigger) // let master know something changed\n        master.log(`${trigger.key} -> ${v}`)\n      }\n    }))\n\n    // api\n    this.append = this.add\n    this.do = this.addToChain\n  }\n\n  log(n){\n    this.log_txt = this.log_txt.concat(\" | \" + n)\n    // console.log(this.log_txt)\n  }\n\n  doChain(v, master, trigger=this){\n    if (!this.actionChain) return null\n    for (let cb of this.actionChain){\n      cb(v, master, trigger)\n    }\n  }\n\n  unchain(){\n    this.actionChain = []\n    this.addToChain((\n    (v, master, trigger=this) => { \n      if (this.master) {\n        master.doChain(v, master, trigger) // let master know something changed\n        master.log(`${trigger.key} -> ${v}`)\n      }\n    }))\n\n    return this\n  }\n\n  addToChain(){\n    if (!this.actionChain) this.actionChain = []\n    forArg(arguments, (cb => {\n      this.actionChain.push(cb)\n    }))\n    return this\n  }\n\n    \n  get logs(){\n    return this.log_txt\n  }\n  \n  proc_value(v){\n    // returns the bounded value and a bool to do the chain or not\n    if (this.loopingValue) return [this.loopBoundVal(v), true]\n    let r = this.rangeBoundVal(v)\n    return [r, r==v]\n  }\n  set value(v){\n    let pv = this.proc_value(v)\n    this.actualValue = pv[0]\n    if (pv[1]) this.doChain(this.actualValue, this.master) // do the chain if the value is in the range\n  }\n\n  get value(){\n    return this.actualValue\n  }\n  get master(){\n    if (this.parent == null || this.parent.parent == null) return this.parent\n    return this.parent.master\n  }\n\n  get html(){\n    return {\n      class: ((v, reset=false) => { \n        if (reset) this.element.removeClass()\n        this.element.addClass(v)\n        return this \n      }),\n      more: \"more cool api capabilities coming soon. Usage: pragma.html.class('lucid').......pragmatize()\"\n    }\n  }\n\n  // actions kinda \n\n  pragmatize(where){\n    //this.compose()\n    if (where instanceof Pragma) where = where.element\n    $(where ? where : document.body).append(this.element)\n    this.isAppended = true\n    return this\n  }\n\n  chain(comp){ \n    this.actionChain = this.actionChain.concat(comp.actionChain) \n    return this\n  }\n\n  with(id, key){ return this.contain(Compose(key).as(id)) }\n\n  from(id, skip_id=false){\n    id = $(id)\n    this.element.remove()\n    this.element = null      \n    if (!skip_id && id.attr(\"id\")) this.key = id.attr(\"id\")\n    this.isAppended = true\n    return this.as(id, true)\n  }\n\n  as(id, skip_id=false){\n    let newElement = $(id)\n    if (!skip_id) newElement.attr( \"id\", this.key )\n    if (this.element) this.element.replaceWith(newElement)\n    this.element = newElement\n    return this\n  }\n\n  compose(force=false, tag=\"div\"){\n    //if (this.force || !this.element) \n    return this.as($(document.createElement(tag)))\n  }\n\n  addSilently(){\n    forArg(arguments, (child) => {\n      super.add(child)\n    })\n    return this\n  }\n\n  add(){\n    forArg(arguments, (child) => {\n      // if (this.containsKey(child.key)) {\n      // }\n      super.add(child)\n      if (!child.isAppended) this.element.append(child.element)\n    })\n    return this\n  }\n\n  prepend(){\n    forArg(arguments, (child) => {\n      // if (this.containsKey(child.key)) {\n      // }\n      super.add(child)\n      if (!child.isAppended) this.element.prepend(child.element)\n    })\n    return this\n  }\n\n  buildInside(map){\n    let comp = Compose(map.key+\"-composer\", null, [map])\n    this.buildAndAdd(comp)\n    this.host(comp)\n  }\n\n  containsKey(key){\n    return this.childMap.has(key)\n  }\n\n  contain(){\n    //this.add(arguments)\n    forArg(arguments, (comp) => {\n      this.add(comp)\n    })\n    return this\n  }\n\n  setTippy(comp, options){\n    if (!options) options = { \n      allowHTML: options,\n      interactive: true,\n      theme: \"pragma\",\n      arrow: false\n    }\n    let contentOption = {\n      content: comp\n    }\n    this.tippy = tippy(this.element[0], {...contentOption, ...options} )\n    return this\n  }\n\n  host(){\n    const hostCompKey = this.key + \"-host\"\n    let icomp\n    forArg(arguments, (comp) => {\n    if (this.tippy){\n      // if already hosts something\n      icomp = this.find(hostCompKey)\n      icomp.contain(comp)\n      this.tippy.destroy() // destory old tippy instance to create new one\n    } else {\n\n      icomp = Compose(hostCompKey).contain(comp)\n      this.contain(icomp)\n    }\n\n    icomp.element.addClass(\"pragma-tippy\")\n    this.setTippy(icomp.element[0])\n    })\n\n    return this\n  }\n\n  buildAndAdd(element){\n      let child = new Comp(element, this)\n      this.add(child)\n  }\n  \n  buildArray(ary){\n    for (let element of ary){\n      this.buildAndAdd(element)\n    }\n  }\n\n  illustrate(icon){\n    if (!this.icon) {       \n      this.icon = $(document.createElement(\"div\"))\n      this.icon.addClass(\"pragma-icon\")\n      this.icon.appendTo(this.element)\n    }\n    this.icon.html(icon)\n    return this\n  }\n\n  build(map){\n    //this.pragmatize()\n    this.compose(true)\n\n    if (map.icon) this.illustrate(map.icon)\n      \n\n    if (map.elements) this.buildArray(map.elements)\n    if (map.hover_element) this.buildInside(map.hover_element)\n    if (map.value) this.value = map.value\n    if (map.set) this.addToChain((v, master, comp) => map.set(v, master, comp))\n    // if (map.set) this.onset = (v, comp) => { \n\n    //   this.master.log(`${map.key} -> ${v}`); \n    //   map.set(v, comp) \n    // }\n\n    if (map.key != null){\n      this.key = map.key\n      this.element.attr(\"id\", this.key)\n    }\n\n    if (map.type){\n      this.type = map.type\n      this.element.addClass(`pragma-${map.type}`)\n    }\n\n    if (map.click){\n      this.onclick = () => { \n          map.click(this.master, this) \n      }\n      this.element.addClass(`pragma-clickable`)\n      this.setup_listeners({\n        \"click\": this.onclick\n      })\n    }\n    if (map.mouseover){\n      this.element.addClass(\"pragma-hoverable\")\n      this.setup_listeners({\n        \"onmouseover\": () => {\n          map.mouseover(this.master)\n        }\n      })\n    }\n    if (map.mouseout){\n      this.setup_listeners({\n        \"mouseout\": () => {\n           map.mouseover(this.master)\n        }\n      })\n    }\n\n    if (map.element) this.element = $(map.element)\n    if (map.element_template && map.variants){\n      map.variants.forEach((variant, index) => {\n        let templ = map.element_template(variant, index)\n        templ.type = \"option\"\n        this.buildAndAdd(templ)\n      })\n    }\n  }\n\n  dismantle(){\n    this.children = []\n    return this\n  }\n  leaveUsKidsAlone(){\n    return this.dismantle()\n  }\n\n  // mousetrap integration\n  proc_bind_cb(cb){\n    if (!cb){\n      if (this.onclick) return (()=> { this.onclick(this.master) })\n      return ((comp) => { comp.value += 1 })\n    }\n    return cb\n  }\n  bind(keys, cb, event){\n    cb = this.proc_bind_cb(cb)\n    Mousetrap.bind(keys, () => { return cb(this) }, event)\n    return this\n  }\n\n  get allChildren(){\n    if (!this.hasKids) return null\n    let childs = this.children\n    for (let child of childs){\n      let descs = child.allChildren\n      if (descs) childs = childs.concat(descs)\n    }\n    return childs\n  }\n\n  get depthKey(){\n    if (this.parent) {\n      return this.parent.depthKey+\"<~<\"+this.key\n    }\n    return this.key\n  }\n\n  shapePrefix(prefix=\"\"){\n    let shape = `${prefix}| ${this.type} - ${this.key} \\n`\n    if (this.hasKids) {\n        prefix += \"| \"\n      for (let child of this.children){\n        shape += child.shapePrefix(prefix)\n      }\n    }\n    return shape\n  }\n\n  setRange(min, max){\n    this.rangeAry = [min, max]\n    return this \n  }\n\n  loopBoundVal(v){\n    if (!this.loopingValue) return v\n\n    let l = this.loopingValue\n    v = v > l[1] ? l[0] :  v\n    v = v < l[0] ? l[1] :  v\n    return v\n  }\n  setLoop(min, max){\n    let actualMin = min || (this.range ? this.range[0] : 0)\n    let actualMax = max || (this.range ? this.range[1] : 69)\n    this.loopingValue = [actualMin, actualMax]\n    return this\n  }\n\n  rangeBoundVal(v){\n    if (!this.range) return v\n    return Math.max(this.range[0], Math.min(v, this.range[1]))\n  }\n\n  get range(){\n    return this.rangeAry\n  }\n\n  get shape(){\n    return this.shapePrefix()\n  }\n\n  descOf(comp){\n    return comp.find(this.key) ? true : false \n  }\n  setup_listeners(listeners){\n    Object.entries(listeners).forEach(([on, cb]) => {\n      this.element.on(on, (event) => cb(event, this))\n    })\n  }\n\n  \n}\n","import $ from \"jquery\"\nimport { throwSoft } from \"../composers/helpers\"\n\n// TODO put these helper functions somewhere else\nfunction fill(svg, color){\n  svg.find(\"path\").each((i, path)=>{\n    path = $(path)\n    const ff = path.attr(\"fill\")\n    if (ff!=\"none\" && ff!=\"transparent\"){\n      path.attr(\"fill\", color)\n    }\n  })\n}\n\nfunction getObjDiff(og, n){\n  if (!(typeof og == typeof n === \"object\")) return n\n  for (const [key, val] of Object.entries(n)){\n    og[key] = val\n  }\n  return og\n}\n\nfunction grabOrThrow(icon, from){\n  if (!from) return throwSoft(`Icon Database is not defined, while trying to grab [${icon}] from [${from}].`, \"fixes\", [\"Typo in the file name?\", \"Did you forget to initialize IconBuilder with an icon database?\"])\n  const i = from[icon]\n  if (!i) return throwSoft(`Could not find ${icon}`)\n  return $(i)\n}\n\nexport default class IconBuilder {\n  constructor(database, defaults=null){\n    this.db = database\n    this.default = defaults || {\n      fill: \"black\",\n      width: \"18px\",\n      height: \"18px\",\n      viewBox: \"0 0 24 24\"\n    }\n  }\n  set default(n){\n    this.defaultOptions = getObjDiff(this.default, n)\n  }\n\n  get default(){\n    return this.defaultOptions\n  }\n\n  optionify(options){\n    if (typeof options === 'object') return getObjDiff(this.default, options)\n    return this.default\n  }\n\n  grab(icon, options){\n    options = this.optionify(options) \n    let i = grabOrThrow(icon, this.db)\n\n    for (const [attr, val] of Object.entries(options)){\n      if (attr == \"fill\") fill(i, val)\n      i.attr(attr, val)\n    }\n\n    return i\n  }\n\n  build(icon, options){\n    if ((options && options.skip) || dontEnvelope.includes(icon)) return this.db[icon]\n    return this.buildIcon(this.db[icon], options)\n  }\n\n  buildIcon(icon, options={}){\n    return `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"${options.viewBox || this.default.viewBox }\" fill=\"${options.fill || this.default.fill}\" \n      width=\"${options.width || this.default.width}\" height=\"${options.height || this.default.height}\" ${options.extra}>\n        ${icon}\n      </svg>\n      `\n  }\n}"],"names":["forArg","args","cb","i","length","throwSoft","desc","potential","fixes","trigger","console","error","key","join","parse","cssToDict","str","replaceAll","cssDict","Map","style","split","replace","trim","shift","set","unsupported","value","entries","CSS","supports","push","css","pcss","Pragma","constructor","element","listeners","this","$","generate_key","childMap","setup_listeners","IntersectionObserver","default","fill","throw","e","f","ff","children","Array","from","values","btoa","Math","random","substr","find","has","get","k","vv","add","spragma","parent","kidsum","size","hasKids","listen","Object","forEach","on","click","text","offset","left","top","height","width","x","relative_width","fromEntries","_isPragma","Monitor","custom","val","tag","action","Comp","master","comp","as","simple","Button","icon","tippy","btn","type","setTippy","controls","step","icons","plus","minus","prepend","append","Variants","variants","map_variants","attr","element_template","index","variantUIAction","buttonAction","variant","removeClass","addClass","variantUIActivate","Slider","min","max","slider","Compose","setRange","parseInt","onupdate","monitor","el","contain","addToChain","v","toString","chain","Select","attrs","onset","html","setLoop","color","colors","font","fonts","map","elements","Value","Pragmatizer","where","pragmatize","arguments","p","at","a","b","host","Bridge","stream","keys","beam","object","table","bridgeComp","do","includes","actualValue","sync","c","warn","makeData","transmit","obj","super","build","log_txt","doChain","log","n","concat","actionChain","unchain","logs","proc_value","loopingValue","loopBoundVal","r","rangeBoundVal","pv","class","reset","more","document","body","isAppended","with","id","skip_id","remove","newElement","replaceWith","compose","force","createElement","addSilently","child","buildInside","buildAndAdd","containsKey","options","allowHTML","interactive","theme","arrow","content","hostCompKey","icomp","destroy","buildArray","ary","illustrate","appendTo","hover_element","onclick","mouseover","onmouseover","mouseout","templ","dismantle","leaveUsKidsAlone","proc_bind_cb","bind","event","Mousetrap","allChildren","childs","descs","depthKey","shapePrefix","prefix","shape","rangeAry","l","range","descOf","svg","each","path","getObjDiff","og","IconBuilder","database","defaults","db","viewBox","defaultOptions","optionify","grab","grabOrThrow","skip","dontEnvelope","buildIcon","extra"],"mappings":"gFAAgBA,EAAOC,EAAMC,GAC3B,IAAK,IAAIC,EAAE,EAAGA,EAAEF,EAAKG,OAAQD,GAAG,EAC9BD,EAAGD,EAAKE,UAICE,EAAY,CAACC,EAAMC,EAAU,KAAMC,EAAM,CAAC,2BAA4BC,EAAQ,QACzFC,QAAQC,MAAO,4EAEPF,EAAW,kBAAiBA,EAAQG,OAAOH,KAAa,eACxDH,mBACY,MAAXC,EAAmB,aAAYA,UAAkBC,EAAMK,KAAK,UAAY,aAC1E,iBAAkB,mBAAoB,mBAAoB,gBAItDC,EAAQ,CACnBC,UAAYC,IAIVA,EAAMA,EAAIC,WAAW,KAAM,KAAKA,WAAW,IAAK,KAChD,IAAIC,EAAU,IAAIC,IAClB,IAAI,IAAIC,KAASJ,EAAIK,MAAM,KAAK,CAC9B,GAAID,EAAME,QAAQ,MAAO,IAAIlB,OAAO,EAAG,SACvCgB,EAAQA,EAAMG,OAAOF,MAAM,KAC3B,IAAIT,EAAMQ,EAAM,GAChBA,EAAMI,QACNN,EAAQO,IAAIb,EAAIW,OAAQH,EAAMP,KAAK,KAAKU,QAI1C,IAAIG,EAAc,GAClB,IAAK,MAAOd,EAAKe,KAAUT,EAAQU,UAC5BC,IAAIC,SAASlB,EAAKe,IAAQD,EAAYK,KAAM,GAAEnB,EAAIW,WAAWI,EAAMJ,UAM1E,OAHIG,EAAYtB,OAAS,GACvBC,EAAW,mBAAmB,QAASqB,GAElCR,GAETc,IAAOC,IACL,IAAID,EAAM,GACV,IAAK,IAAKpB,EAAKe,KAAUb,EAAMC,UAAUkB,GAEvCD,GAAM,GAAEpB,KAAOe,KAEjB,OAAOK,IC3CX,MAAME,EACJC,YAAYC,EAAQ,KAAMC,EAAU,GAAIzB,GACtC0B,KAAKF,QAAUG,EAAEH,GACjBE,KAAKE,aAAa5B,GAElB0B,KAAKG,SAAW,IAAItB,IACpBmB,KAAKI,gBAAgBL,GACrBM,qBAAqBC,QAAU,CAC7BC,KAAM,QAGVC,MAAMC,EAAGC,EAAGC,EAAG,IACb5C,EAAU0C,EAAGC,EAAGC,EAAIX,MAEtBY,eACE,OAAOC,MAAMC,KAAKd,KAAKG,SAASY,UAElCb,aAAa5B,GAET0B,KAAK1B,IADI,MAAPA,EACSA,EAEA0C,KAAKC,KAAKC,UAAUC,OAAO,GAAI,GAI9CC,KAAK9C,GAGH,GAAI0B,KAAKG,SAASkB,IAAI/C,GAAM,YAAY6B,SAASmB,IAAIhD,GACrD,IAAK,IAAKiD,EAAGlC,UAAec,SAAU,CACpC,IAAIqB,EAAKnC,EAAM+B,KAAK9C,GACpB,GAAIkD,EAAI,OAAOA,GAGnBC,IAAIC,GACF,GAAI1B,KAAKG,SAASkB,IAAIK,EAAQpD,KAE5B,OADAoD,EAAQpD,IAAMoD,EAAQpD,IAAM,SAChBmD,IAAIC,GAElBA,EAAQC,OAAS3B,KACjBA,KAAKG,SAAShB,IAAIuC,EAAQpD,IAAKoD,GAGjCE,aAAe,YAAYzB,SAAS0B,KACpCC,cAAgB,YAAYF,OAAS,EAErCG,OAAOhC,GAEL,OADAC,KAAKI,gBAAgBL,QAGvBK,gBAAgBL,GACdiC,OAAO1C,QAAQS,GAAWkC,QAAQ,EAAEC,EAAItE,MACtCoC,KAAKF,QAAQoC,GAAGA,EAAI,IAAMtE,OAG9BuE,SAEAC,OACE,YAAYtC,QAAQsC,OAEtBC,SACE,YAAYvC,QAAQuC,SAEtBC,OACE,YAAYD,SAASC,KAEvBC,MACE,YAAYF,SAASE,IAEvBC,SACE,YAAY1C,QAAQ0C,SAEtBC,QACE,YAAY3C,QAAQ2C,QAEtBC,EAAEC,GACA,YAAYL,OAAStC,KAAKyC,QAAQ,EAAIE,EAAe,EAEvDjD,IAAIhB,GAEF,OADIsB,KAAKF,SAASE,KAAKF,QAAQJ,IAAIsC,OAAOY,YAAYpE,EAAMC,UAAUC,UAIxEmE,gBAAkB,UClFpB,MAiBMC,EAAU,CACdC,OAAS,CAACzE,EAAK0E,EAAI,EAAGC,EAAKC,QACdC,EAAK,CACd7E,IAAKA,EACLe,MAAO2D,EACP7D,IAAM,CAACE,EAAO+D,EAAQC,KACpB,GAAGH,EAAQ,OAAOA,EAAO7D,EAAOgE,EAAMD,MAEvCE,GAAI,IAAGL,KAAOD,MAAQC,KAAQ3E,EAAI,YAEvCiF,OAAS,CAACjF,EAAK0E,EAAI,EAAGC,EAAI,IAAKC,EAAO,OAKzBJ,EAAQC,OAAOzE,EAAK0E,EAAKC,EAJrB,CAAC5D,EAAOgE,EAAMD,KAE3B,GADAC,EAAKvD,QAAQsC,KAAK/C,GACd6D,EAAQ,OAAOA,EAAO7D,EAAOgE,EAAMD,MAOvCI,EAAS,CACbN,OAAS,CAAC5E,EAAKmF,EAAMP,EAAQQ,KAC3B,IAAIC,EAAM,IAAIR,EAAK,CACjB7E,IAAKA,EACLmF,KAAMA,EACNG,KAAM,SACNzB,MAAOe,IAGT,OADIQ,GAAOC,EAAIE,SAASH,GACjBC,GAETG,SAAW,CAACxF,EAAKe,EAAO0E,EAAMb,EAAQc,KAEpC,IAAIC,EAAOT,EAAON,OAAO5E,EAAI,IAAK0F,EAAM,MAAQ,IAAK,CAACZ,EAAQC,KAC5DA,EAAK1B,OAAOtC,OAAS0E,IAGnBG,EAAQV,EAAON,OAAO5E,EAAI,IAAK0F,EAAM,MAAQ,IAAK,CAACZ,EAAQC,KAC7DA,EAAK1B,OAAOtC,QAAU0E,IAGxB,OAAOjB,EAAQS,OAAOjF,EAAKe,EAAO,OAAO8E,QAAQF,GAAMG,OAAOF,KAmB5DG,EAAW,CAAC/F,EAAKe,EAAOoE,EAAMtE,EAAKgD,EAAOmC,QACnCnB,EAAKoB,EAAa,CAACjG,IAAIA,EAAIe,MAAMA,EAAMoE,KAAKA,EAAKtE,IAAIA,EAAIgD,MAAMA,EAAMmC,SAASA,KAGrFC,EAAgBC,IAEb,CACLlG,IAAKkG,EAAKlG,IACVe,MAAOmF,EAAKnF,MACZuE,KAAM,SACNa,iBAAkB,CAACnG,EAAKoG,IAvFP,EAACpG,EAAKe,EAAOoE,EAAMP,KAC/B,CACL5E,IAAKA,EACLsF,KAAM,SACNH,KAAMA,EACNpE,MAAOA,EACP8C,MAAO,CAACiB,EAAQC,KAkF+CA,CAAAA,IAhB3C,EAACA,EAAMqB,EAAOF,KACtBnB,EAAKjC,KAAKoD,EAAKlG,KACrBe,MAAQqF,GAeVC,CAAgBtB,EAAMqB,EAAOF,IAlF/BtB,CAAOE,MAiFAwB,CAAaJ,EAAKlG,IAAKoG,EAAOF,EAAKf,KAAKnF,EAAKoG,IAItDvF,IAAK,CAACE,EAAOgE,KACPA,GAAQA,EAAKjC,KAAKoD,EAAKlG,MA7BNwB,CAAAA,IAEzB,IAAK,IAAI+E,KAAW/E,EAAQc,SAC1BiE,EAAQ/E,QAAQgF,YAAY,iBAE9BhF,EAAQc,SAASd,EAAQT,OAAOS,QAAQiF,SAAS,kBAwBZC,CAAkB3B,EAAKjC,KAAKoD,EAAKlG,MAClEkG,EAAKrF,IAAIE,EAAOgE,EAAMmB,EAAKlG,MAE7BgG,SAAUE,EAAKF,WAuBbW,EAAS,CACb1B,OAAQ,CAACjF,EAAK4G,EAAI,EAAGC,EAAI,IAAKnC,KAC5BA,EAAMA,IAAQkC,EAAIC,GAAK,EACvB,IAAIC,EAASC,EAAQ/G,GAAKgF,GAAI,2BAA0B4B,SAAWC,WAAanC,cAAgBsC,SAASJ,EAAKC,GAK9G,OAJAC,EAAOtF,QAAQoC,GAAG,QAAS,KACzBkD,EAAO/F,MAAQkG,SAASH,EAAOtF,QAAQ,GAAGT,SAGrC+F,GAGT/F,MAAO,CAACf,EAAK4G,EAAKC,EAAKnC,EAAI,EAAGwC,KAC5B,IAAIC,EAAU3C,EAAQS,OAAOjF,EAAI,WAAY0E,EAAK,OAC9CoC,EAASH,EAAO1B,OAAOjF,EAAI,UAAW4G,EAAKC,EAAKnC,GAChD0C,EAAKL,EAAQ/G,GAAKqH,QAAQP,EAAQK,GAASH,SAASJ,EAAKC,GAW7D,OATAC,EAAOQ,WAAYC,IACjBA,EAAIN,SAASM,GACbH,EAAGrG,MAAQwG,IAGbH,EAAGE,WAAYC,IACbT,EAAOtF,QAAQ,GAAGT,MAAQwG,EAAEC,aAGvBJ,EAAGK,MAAMN,KAGdO,EAAS,CACbxB,KAAO,CAAClG,EAAK2H,EAAOC,EAAOzC,EAAMpE,EAAM,QAC1B8D,EAAKoB,EAAa,CAC3BjG,IAAKA,EACLe,MAAOA,EACPoE,KAAM,CAACnF,EAAKoG,KACV,IAAIF,EAAOf,EAAKnF,EAAKoG,GACrB,MAAQ,eAAcF,EAAKZ,0DAA0DY,EAAK9E,QAAQ8E,EAAK2B,cAEzGhH,IAAK,CAAC0G,EAAGxC,EAAM/E,KACT4H,GAAOA,EAAMD,EAAMJ,GAAIxC,EAAM/E,IAEnCgG,SAAU2B,KACRX,SAAS,EAAGW,EAAMnI,OAAO,GAAGsI,UAElCC,MAAQ,CAAC/H,EAAKgI,EAAQJ,EAAO7G,EAAM,IAC1B2G,EAAOxB,KAAKlG,EAAKgI,EAAQJ,EAAO,CAAC5H,EAAKoG,KAAmB,CAAEhF,IAAM,cAAapB,IAAO6H,KAAM,KAAQ9G,GAE5GkH,KAAO,CAACjI,EAAKkI,EAAON,EAAO7G,EAAM,IACxB2G,EAAOxB,KAAKlG,EAAKkI,EAAON,EAAO,CAAC5H,EAAKoG,KAAmB,CAAEhF,IAAM,eAAcpB,IAAO6H,KAAM,OAAU9G,IAK1GoH,EAAM,CAACnI,EAAKsF,EAAMH,EAAMiD,EAAS,KAAMrH,EAAM,QAC1C,CAACf,IAAIA,EAAIsF,KAAKA,EAAKvE,MAAMA,EAAMoE,KAAKA,EAAKiD,SAASA,IASrDrB,EAAU,CAAC/G,EAAKmF,EAAMiD,EAAU9C,EAAK,iBACHT,EAAlC7E,aAAe0D,OAAwB1D,EAC3BmI,EAAInI,EAAKsF,EAAMH,EAAMiD,IAGjCC,EAAQ,CAACrI,EAAKe,EAAOoE,EAAMiD,EAAU9C,EAAK,cACnCT,EAAKsD,EAAInI,EAAKsF,EAAMH,EAAMiD,IAQvC,MAAME,EACJ/G,YAAYgH,GACV7G,KAAK6G,MAAQA,EAEfC,aACEpJ,EAAOqJ,UAAYC,IACjBA,EAAEF,WAAW9G,KAAK6G,UAKlBI,MAAAA,EAAMJ,IACV,OAhBeG,EAgBHH,IAfa,iBAANG,GAAkBA,EAAEnE,cAeR+D,EAAYC,EAAM/G,aACtC8G,EAAY3G,EAAE4G,IAjB3B,IAAiBG,GAoBXF,EAAa,CAACzD,EAAMwD,KACxBxD,EAAKyD,WAAWD,GACTxD,GAGHsC,EAAU,CAACuB,EAAGC,KAClBD,EAAEvB,QAAQwB,GACHD,GAGHE,EAAO,CAACF,EAAGC,IACTD,EAAEE,KAAKD,GAITE,EAAS,CAACC,EAAQC,EAAK,GAAIC,EAAM,EAACC,EAAQtJ,IAAYC,QAAQsJ,MAAMD,OAkBxE,IAAIE,EAAatC,EAAQiC,EAAOhJ,IAAI,UA6BpC,OAvBAqJ,EAAWC,GAAI,CAAC/B,EAAGzC,EAAQjF,KAErBoJ,EAAKM,SAAS1J,EAAQG,OACxBqJ,EAAWG,YAzBf,SAAkB1E,GAChB,IAAI2E,EAAO,GACX,IAAK,IAAIzJ,KAAOiJ,EAAK,CACnB,IAAIS,EAAI5E,EAAOhC,KAAK9C,GAChB0J,EACFD,EAAKzJ,GAAO0J,EAAE3I,MAEdjB,QAAQ6J,KAAM,6BAA4B3J,QAAU8E,EAAO9E,qCACpCqJ,EAAWrJ,OAGtC,OAAOyJ,EAcoBG,CAAS9E,GAPtC,SAAkBjF,GAChBqJ,EAAKG,EAAWtI,MAAOlB,GAOrBgK,CAAShK,MAKbmJ,EAAOvB,MAAM4B,GAMbA,EAAWxI,IAAOiJ,IAChB,IAAK,IAAK9J,EAAKe,KAAU2C,OAAO1C,QAAQ8I,GAEtCd,EAAOlG,KAAK9C,GAAKe,MAAMA,GAKpBsI,SChRYxE,UAAavD,EAChCC,YAAY4G,EAAK9E,EAAS,MACxB0G,QACArI,KAAK8H,YAAc,KAEfrB,aAAezE,QACjBhC,KAAKsI,MAAM7B,GACXzG,KAAK2B,OAASA,GAEd3B,KAAK1B,IAAMmI,EAGbzG,KAAKuI,QAAU,GAIfvI,KAAK4F,WACL,CAACC,EAAGzC,EAAQjF,EAAQ6B,QACdA,KAAKoD,SACPA,EAAOoF,QAAQ3C,EAAGzC,EAAQjF,GAC1BiF,EAAOqF,IAAK,GAAEtK,EAAQG,UAAUuH,QAKpC7F,KAAKoE,OAASpE,KAAKyB,IACnBzB,KAAK4H,GAAK5H,KAAK4F,WAGjB6C,IAAIC,GACF1I,KAAKuI,QAAUvI,KAAKuI,QAAQI,OAAO,MAAQD,GAI7CF,QAAQ3C,EAAGzC,EAAQjF,EAAQ6B,MACzB,IAAKA,KAAK4I,YAAa,YACvB,IAAK,IAAIhL,UAAWgL,YAClBhL,EAAGiI,EAAGzC,EAAQjF,GAIlB0K,UAUE,OATA7I,KAAK4I,YAAc,GACnB5I,KAAK4F,WACL,CAACC,EAAGzC,EAAQjF,EAAQ6B,QACdA,KAAKoD,SACPA,EAAOoF,QAAQ3C,EAAGzC,EAAQjF,GAC1BiF,EAAOqF,IAAK,GAAEtK,EAAQG,UAAUuH,aAOtCD,aAKE,OAJK5F,KAAK4I,cAAa5I,KAAK4I,YAAc,IAC1ClL,EAAOqJ,UAAYnJ,IACjBoC,KAAK4I,YAAYnJ,KAAK7B,UAM1BkL,WACE,YAAYP,QAGdQ,WAAWlD,GAET,GAAI7F,KAAKgJ,aAAc,MAAO,CAAChJ,KAAKiJ,aAAapD,IAAI,GACrD,IAAIqD,EAAIlJ,KAAKmJ,cAActD,GAC3B,MAAO,CAACqD,EAAGA,GAAGrD,GAEhBxG,UAAUwG,GACR,IAAIuD,EAAKpJ,KAAK+I,WAAWlD,GACzB7F,KAAK8H,YAAcsB,EAAG,GAClBA,EAAG,IAAIpJ,KAAKwI,QAAQxI,KAAK8H,YAAa9H,KAAKoD,QAGjD/D,YACE,YAAYyI,YAEd1E,aACE,OAAmB,MAAfpD,KAAK2B,QAAwC,MAAtB3B,KAAK2B,OAAOA,YAA4BA,YACvDA,OAAOyB,OAGrB+C,WACE,MAAO,CACLkD,MAAQ,CAACxD,EAAGyD,GAAM,KACZA,GAAOtJ,KAAKF,QAAQgF,cACxB9E,KAAKF,QAAQiF,SAASc,SAGxB0D,KAAM,gGAMVzC,WAAWD,GAKT,OAHIA,aAAiBjH,IAAQiH,EAAQA,EAAM/G,SAC3CG,EAAE4G,GAAgB2C,SAASC,MAAMrF,OAAOpE,KAAKF,SAC7CE,KAAK0J,YAAa,OAIpB3D,MAAM1C,GAEJ,OADArD,KAAK4I,YAAc5I,KAAK4I,YAAYD,OAAOtF,EAAKuF,kBAIlDe,KAAKC,EAAItL,GAAM,YAAYqH,QAAQN,EAAQ/G,GAAKgF,GAAGsG,IAEnD9I,KAAK8I,EAAIC,GAAQ,GAMf,OALAD,EAAK3J,EAAE2J,GACP5J,KAAKF,QAAQgK,SACb9J,KAAKF,QAAU,MACV+J,GAAWD,EAAGpF,KAAK,QAAOxE,KAAK1B,IAAMsL,EAAGpF,KAAK,OAClDxE,KAAK0J,YAAa,OACNpG,GAAGsG,GAAI,GAGrBtG,GAAGsG,EAAIC,GAAQ,GACb,IAAIE,EAAa9J,EAAE2J,GAInB,OAHKC,GAASE,EAAWvF,KAAM,KAAMxE,KAAK1B,KACtC0B,KAAKF,SAASE,KAAKF,QAAQkK,YAAYD,GAC3C/J,KAAKF,QAAUiK,OAIjBE,QAAQC,GAAM,EAAOjH,EAAI,OAEvB,YAAYK,GAAGrD,EAAEuJ,SAASW,cAAclH,KAG1CmH,cAIE,OAHA1M,EAAOqJ,UAAYsD,IACjBhC,MAAM5G,IAAI4I,UAKd5I,MAOE,OANA/D,EAAOqJ,UAAYsD,IAGjBhC,MAAM5G,IAAI4I,GACLA,EAAMX,YAAY1J,KAAKF,QAAQsE,OAAOiG,EAAMvK,gBAKrDqE,UAOE,OANAzG,EAAOqJ,UAAYsD,IAGjBhC,MAAM5G,IAAI4I,GACLA,EAAMX,YAAY1J,KAAKF,QAAQqE,QAAQkG,EAAMvK,gBAKtDwK,YAAY7D,GACV,IAAIpD,EAAOgC,EAAQoB,EAAInI,IAAI,YAAa,KAAM,CAACmI,IAC/CzG,KAAKuK,YAAYlH,GACjBrD,KAAKoH,KAAK/D,GAGZmH,YAAYlM,GACV,YAAY6B,SAASkB,IAAI/C,GAG3BqH,UAKE,OAHAjI,EAAOqJ,UAAY1D,IACjBrD,KAAKyB,IAAI4B,UAKbQ,SAASR,EAAMoH,GAWb,OAVKA,IAASA,EAAU,CACtBC,UAAWD,EACXE,aAAa,EACbC,MAAO,SACPC,OAAO,IAKT7K,KAAK0D,MAAQA,EAAM1D,KAAKF,QAAQ,GAAI,CAFlCgL,QAASzH,KAE+CoH,SAI5DrD,OACE,MAAM2D,EAAc/K,KAAK1B,IAAM,QAC/B,IAAI0M,EAiBJ,OAhBAtN,EAAOqJ,UAAY1D,IACfrD,KAAK0D,OAEPsH,EAAQhL,KAAKoB,KAAK2J,GAClBC,EAAMrF,QAAQtC,GACdrD,KAAK0D,MAAMuH,YAGXD,EAAQ3F,EAAQ0F,GAAapF,QAAQtC,GACrCrD,KAAK2F,QAAQqF,IAGfA,EAAMlL,QAAQiF,SAAS,gBACvB/E,KAAK6D,SAASmH,EAAMlL,QAAQ,WAM9ByK,YAAYzK,GACR,IAAIuK,EAAQ,IAAIlH,EAAKrD,EAASE,MAC9BA,KAAKyB,IAAI4I,GAGba,WAAWC,GACT,IAAK,IAAIrL,KAAWqL,EAClBnL,KAAKuK,YAAYzK,GAIrBsL,WAAW3H,GAOT,OANKzD,KAAKyD,OACRzD,KAAKyD,KAAOxD,EAAEuJ,SAASW,cAAc,QACrCnK,KAAKyD,KAAKsB,SAAS,eACnB/E,KAAKyD,KAAK4H,SAASrL,KAAKF,UAE1BE,KAAKyD,KAAK0C,KAAK1C,QAIjB6E,MAAM7B,GAEJzG,KAAKiK,SAAQ,GAETxD,EAAIhD,MAAMzD,KAAKoL,WAAW3E,EAAIhD,MAG9BgD,EAAIC,UAAU1G,KAAKkL,WAAWzE,EAAIC,UAClCD,EAAI6E,eAAetL,KAAKsK,YAAY7D,EAAI6E,eACxC7E,EAAIpH,QAAOW,KAAKX,MAAQoH,EAAIpH,OAC5BoH,EAAItH,KAAKa,KAAK4F,WAAW,CAACC,EAAGzC,EAAQC,IAASoD,EAAItH,IAAI0G,EAAGzC,EAAQC,IAOtD,MAAXoD,EAAInI,MACN0B,KAAK1B,IAAMmI,EAAInI,IACf0B,KAAKF,QAAQ0E,KAAK,KAAMxE,KAAK1B,MAG3BmI,EAAI7C,OACN5D,KAAK4D,KAAO6C,EAAI7C,KAChB5D,KAAKF,QAAQiF,SAAU,UAAS0B,EAAI7C,SAGlC6C,EAAItE,QACNnC,KAAKuL,QAAU,KACX9E,EAAItE,MAAMnC,KAAKoD,OAAQpD,OAE3BA,KAAKF,QAAQiF,SAAU,oBACvB/E,KAAKI,gBAAgB,CACnB+B,MAASnC,KAAKuL,WAGd9E,EAAI+E,YACNxL,KAAKF,QAAQiF,SAAS,oBACtB/E,KAAKI,gBAAgB,CACnBqL,YAAe,KACbhF,EAAI+E,UAAUxL,KAAKoD,YAIrBqD,EAAIiF,UACN1L,KAAKI,gBAAgB,CACnBsL,SAAY,KACTjF,EAAI+E,UAAUxL,KAAKoD,WAKtBqD,EAAI3G,UAASE,KAAKF,QAAUG,EAAEwG,EAAI3G,UAClC2G,EAAIhC,kBAAoBgC,EAAInC,UAC9BmC,EAAInC,SAASrC,QAAQ,CAAC4C,EAASH,KAC7B,IAAIiH,EAAQlF,EAAIhC,iBAAiBI,EAASH,GAC1CiH,EAAM/H,KAAO,SACb5D,KAAKuK,YAAYoB,KAKvBC,YAEE,OADA5L,KAAKY,SAAW,QAGlBiL,mBACE,YAAYD,YAIdE,aAAalO,GACX,OAAKA,IACCoC,KAAKuL,QAAiB,KAAOvL,KAAKuL,QAAQvL,KAAKoD,SAC1CC,IAAWA,EAAKhE,OAAS,IAItC0M,KAAKxE,EAAM3J,EAAIoO,GAGb,OAFApO,EAAKoC,KAAK8L,aAAalO,GACvBqO,EAAUF,KAAKxE,EAAM,IAAe3J,EAAGoC,MAASgM,QAIlDE,kBACE,IAAKlM,KAAK8B,QAAS,YACnB,IAAIqK,EAASnM,KAAKY,SAClB,IAAK,IAAIyJ,KAAS8B,EAAO,CACvB,IAAIC,EAAQ/B,EAAM6B,YACdE,IAAOD,EAASA,EAAOxD,OAAOyD,IAEpC,OAAOD,EAGTE,eACE,OAAIrM,KAAK2B,YACKA,OAAO0K,SAAS,MAAMrM,KAAK1B,SAE7BA,IAGdgO,YAAYC,EAAO,IACjB,IAAIC,EAAS,GAAED,MAAWvM,KAAK4D,UAAU5D,KAAK1B,SAC9C,GAAI0B,KAAK8B,QAAS,CACdyK,GAAU,KACZ,IAAK,IAAIlC,UAAczJ,SACrB4L,GAASnC,EAAMiC,YAAYC,GAG/B,OAAOC,EAGTlH,SAASJ,EAAKC,GAEZ,OADAnF,KAAKyM,SAAW,CAACvH,EAAKC,QAIxB8D,aAAapD,GACX,IAAK7F,KAAKgJ,aAAc,OAAOnD,EAE/B,IAAI6G,EAAI1M,KAAKgJ,aAGb,OAFAnD,EAAIA,EAAI6G,EAAE,GAAKA,EAAE,GAAM7G,GACf6G,EAAE,GAAKA,EAAE,GAAM7G,EAGzBO,QAAQlB,EAAKC,GAIX,OADAnF,KAAKgJ,aAAe,CAFJ9D,IAAQlF,KAAK2M,MAAQ3M,KAAK2M,MAAM,GAAK,GACrCxH,IAAQnF,KAAK2M,MAAQ3M,KAAK2M,MAAM,GAAK,UAKvDxD,cAActD,GACZ,OAAK7F,KAAK2M,MACH1L,KAAKkE,IAAInF,KAAK2M,MAAM,GAAI1L,KAAKiE,IAAIW,EAAG7F,KAAK2M,MAAM,KAD9B9G,EAI1B8G,YACE,YAAYF,SAGdD,YACE,YAAYF,cAGdM,OAAOvJ,GACL,QAAOA,EAAKjC,KAAKpB,KAAK1B,KAExB8B,gBAAgBL,GACdiC,OAAO1C,QAAQS,GAAWkC,QAAQ,EAAEC,EAAItE,MACtCoC,KAAKF,QAAQoC,GAAGA,EAAK8J,GAAUpO,EAAGoO,EAAOhM,UCxY/C,SAASO,EAAKsM,EAAKxG,GACjBwG,EAAIzL,KAAK,QAAQ0L,KAAK,CAACjP,EAAGkP,KAExB,MAAMpM,GADNoM,EAAO9M,EAAE8M,IACOvI,KAAK,QACb,QAAJ7D,GAAkB,eAAJA,GAChBoM,EAAKvI,KAAK,OAAQ6B,KAKxB,SAAS2G,EAAWC,EAAIvE,GACtB,UAAauE,UAAavE,IAAM,SAAW,OAAOA,EAClD,IAAK,MAAOpK,EAAK0E,KAAQhB,OAAO1C,QAAQoJ,GACtCuE,EAAG3O,GAAO0E,EAEZ,OAAOiK,QAUYC,EACnBrN,YAAYsN,EAAUC,EAAS,MAC7BpN,KAAKqN,GAAKF,EACVnN,KAAKM,QAAU8M,GAAY,CACzB7M,KAAM,QACNkC,MAAO,OACPD,OAAQ,OACR8K,QAAS,aAGbhN,YAAYoI,GACV1I,KAAKuN,eAAiBP,EAAWhN,KAAKM,QAASoI,GAGjDpI,cACE,YAAYiN,eAGdC,UAAU/C,GACR,MAAuB,iBAAZA,EAA6BuC,EAAWhN,KAAKM,QAASmK,QACrDnK,QAGdmN,KAAKhK,EAAMgH,GACTA,EAAUzK,KAAKwN,UAAU/C,GACzB,IAAI5M,EAhCR,SAAqB4F,EAAM3C,GACzB,IAAKA,EAAM,OAAO/C,EAAW,uDAAsD0F,YAAe3C,MAAU,QAAS,CAAC,yBAA0B,oEAChJ,MAAMjD,EAAIiD,EAAK2C,GACf,OAAK5F,EACEoC,EAAEpC,GADME,EAAW,kBAAiB0F,KA6BjCiK,CAAYjK,EAAMzD,KAAKqN,IAE/B,IAAK,MAAO7I,EAAMxB,KAAQhB,OAAO1C,QAAQmL,GAC3B,QAARjG,GAAgBjE,EAAK1C,EAAGmF,GAC5BnF,EAAE2G,KAAKA,EAAMxB,GAGf,OAAOnF,EAGTyK,MAAM7E,EAAMgH,GACV,OAAKA,GAAWA,EAAQkD,MAASC,aAAa/F,SAASpE,QAAmB4J,GAAG5J,QACjEoK,UAAU7N,KAAKqN,GAAG5J,GAAOgH,GAGvCoD,UAAUpK,EAAMgH,EAAQ,IACtB,MAAQ,4DAC6CA,EAAQ6C,SAAWtN,KAAKM,QAAQgN,kBAAmB7C,EAAQlK,MAAQP,KAAKM,QAAQC,wBAC1HkK,EAAQhI,OAASzC,KAAKM,QAAQmC,kBAAkBgI,EAAQjI,QAAUxC,KAAKM,QAAQkC,WAAWiI,EAAQqD,mBACvGrK"}